@model CarRenting.Models.ReceptionViewModel

@{
    ViewBag.Title = "Receber veículo";
}

<div class="container">
    <div class="log-headers-h2 boxshadow col-md-8 offset-md-2">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="log-headers boxshadow col-md-8 offset-md-2">
        <h4>@Model.CarBrand @Model.CarModel @Model.CarLicense</h4>
    </div>

    @using (Html.BeginForm("ReceiveVehicle", "Rents", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="jumbotron boxshadow col-md-8 offset-md-2">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group col-md-10 offset-1">
                @Html.LabelFor(model => model.Checks):
                @foreach (var item in Model.Checks)
                {
                    <br />
                    <span>&nbsp;&rArr;&nbsp;@Html.DisplayFor(modelItem => item.Description)</span>
                }
            </div>
            <div class="form-group col-md-10 offset-1">
                @Html.EditorFor(model => model.IsChecked)
                @Html.LabelFor(model => model.IsChecked, htmlAttributes: new { @class = "col-form-label" })
                @Html.ValidationMessageFor(model => model.IsChecked, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-10 offset-1">
                @Html.LabelFor(model => model.KmsIn, htmlAttributes: new { @class = "col-form-label" })
                @Html.EditorFor(model => model.KmsIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.KmsIn, "", new { @class = "text-danger" })

            </div>
            <div class="form-group col-md-10 offset-1">
                @Html.EditorFor(model => model.IsDamaged)
                @Html.LabelFor(model => model.IsDamaged, htmlAttributes: new { @class = "col-form-label" })
                @Html.ValidationMessageFor(model => model.IsDamaged, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-md-10 offset-1">
                @Html.LabelFor(model => model.Files, htmlAttributes: new { @class = "col-form-label" })
                <p>
                    @Html.TextBoxFor(model => model.Files, "", new { @type = "file", @multiple = "multiple", @class = "btn-light btn" })
                </p>
                @Html.ValidationMessageFor(model => model.Files, "", new { @class = "text-danger" })
            </div>
            <br />
            <div class="form-group text-center">
                @Html.ActionLink("Voltar", "ListForDelivery", null, new { @class = "btn-danger btn" })
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
