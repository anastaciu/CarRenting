@using System.Diagnostics
@model CarRenting.Models.Rent

@{
    ViewBag.Title = "Detalhes da Reserva";
    var isConfirmed = Model.IsConfirmed ? @"Sim" : @"Não";
    var isDelivered = Model.IsDelivered ? @"Sim" : @"Não";
    var isReceived = Model.IsReceived ? @"Sim" : @"Não";
    double value;
    try
    {
        value = Model.Car.Price * (Model.End.ToOADate() - Model.Begin.ToOADate() + 1);
    }
    catch (Exception e)
    {
        Debug.WriteLine(e.Message);
        value = Double.MaxValue;
    }

}
<div class="container">

    <div class="log-headers-h2 boxshadow container col-md-10 offset-md-1" style="margin-bottom: 1vh">
        <h2 class="text-center">@ViewBag.Title</h2>
    </div>
    <div class="boxshadow jumbotron col-md-10 offset-md-1">
        <div class="row">
            <dl class="dl-horizontal col-md-6">
                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.Name)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.Name)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.ApplicationUser.Email)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.ApplicationUser.Email)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Car.License)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Car.License)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Car.Brand)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Car.Brand)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Car.Model)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Car.Model)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Car.Type.Type)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Car.Type.Type)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Begin)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Begin)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.End)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.End)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.IsConfirmed)
                </dt>
                <dd>
                    @isConfirmed
                </dd>
            </dl>

            <dl id="top-dl" class="dl-horizontal col-md-6">

                <dt>
                    @Html.DisplayNameFor(model => model.IsDelivered)
                </dt>
                <dd>
                    @isDelivered
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.KmsOut)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.KmsOut)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.DeliveryFaults)
                </dt>
                <dd>
                    @if (!Model.DeliveryFaults.IsEmpty())
                    {

                        @Html.DisplayFor(model => model.DeliveryFaults)

                    }

                    else
                    {
                        @:N/A
                    }
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.IsReceived)
                </dt>
                <dd>
                    @isReceived
                </dd>

                <dt>
                    Preço Total
                </dt>
                <dd>
                    @value €
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.IsDamaged)
                </dt>
                <dd>
                    @if (Model.IsDamaged)
                    {
                        @:Sim
                    }
                    else
                    {
                        @:Não
                    }

                </dd>
                <dt>



                    @Html.DisplayNameFor(model => model.DamageImages)
                </dt>
                <dd>
                    <div class="modal fade" id="damageModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div id="damage" class="carousel slide" data-ride="carousel" style="margin-bottom: -3px">

                                    <ol class="carousel-indicators">
                                        @{
                                            int i = 0;
                                            var sliders = 0;

                                            while (sliders < Model.DamageImages.Count)
                                            {
                                                i++;
                                                var olactive = i == 1 ? "active" : "";
                                                <li data-target="#damage" data-slide-to="@sliders" class="@olactive"></li>
                                                sliders++;
                                            }
                                        }
                                    </ol>
                                    <div class="carousel-inner" role="listbox" style="width: 100%; height: 400px !important;">

                                        @{i = 0;}
                                        @foreach (var item in Model.DamageImages)
                                        {
                                            i++;
                                            var active = i == 1 ? "active" : "";
                                            <div class="carousel-item @active">
                                                <img class="d-block" src="@Url.Content(item.ImagePath)" alt="imagem não encontrada" />
                                            </div>

                                        }
                                    </div>
                                    <a class="carousel-control-prev" href="#damage" data-slide="prev">
                                        <span class="carousel-control-prev-icon"></span>
                                    </a>
                                    <a class="carousel-control-next" href="#damage" data-slide="next">
                                        <span class="carousel-control-next-icon"></span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    @if(Model.DamageImages.Count > 0){
                    <button type="button" class="btn-primary btn" data-toggle="modal" data-target="#damageModal" style="padding: 0px;font-size: 95%">
                        Ver danos
                    </button>
                    }
                    else
                    {
                        @:N/A
                    }
                    
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.IsChecked)
                </dt>
                <dd>
                    @if (Model.IsChecked)
                    {
                        @:Sim
                    }
                    else
                    {
                        @:Não
                    }
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.KmsIn)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.KmsIn)
                </dd>
            </dl>
        </div>
        <div class="text-center">
            @Html.ActionLink("Voltar", "Index", null, new { @class = "btn-danger btn" })
        </div>
    </div>
</div>